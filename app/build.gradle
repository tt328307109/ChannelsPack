apply plugin: 'com.android.application'
static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}
//编译并打所有的release包（通常上正式渠道只需要release包，所以我们只打release包就可以了）
//gradlew assembleRelease
//编译并打所有的debug包
//gradlew assembleDebug
android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "cn.melonmobile.pujin"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
//            keyAlias 'pujjr'
//            keyPassword 'Pujjr1234'
//            storeFile file('E:/pujinKey/pujjr.jks')
//            storePassword 'Pujjr1234'
            //下面是让debug时签名与正式版签名一样，不需要可以全部注释
            storeFile file(rootProject.ext.pack.storeFile)
            storePassword rootProject.ext.pack.storePassword
            keyAlias rootProject.ext.pack.keyAlias
            keyPassword rootProject.ext.pack.keyPassword
        }
        release {
            storeFile file(rootProject.ext.pack.storeFile)
            storePassword rootProject.ext.pack.storePassword
            keyAlias rootProject.ext.pack.keyAlias
            keyPassword rootProject.ext.pack.keyPassword
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            // 渠道
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出格式为xxx_v1.0.0_2015-01-15_flavor.apk
                        output.outputFileName = "青毛测试渠道${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                    }
                }
            }
        }
    }

    flavorDimensions 'tier'
    //友盟渠道号--2中方式都能用
    productFlavors {
        yingyongbao {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "yingyongbao"]
        }
        _360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "360"]
        }
        wandoujia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]
        }
        xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }
        baidu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]
        }
    }

//    productFlavors {
//        dailybuild {
//            dimension 'tier'
//        }
//        tencent {
//            dimension 'tier'
//        }
//
//        _360 {
//            dimension 'tier'
//        }
//        wandoujia {
//            dimension 'tier'
//        }
//        xiaomi {
//            dimension 'tier'
//        }
//        baidu {
//            dimension 'tier'
//        }
//    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [
                UMENG_CHANNEL_VALUE: name,
                UMENG_APPKEY       : rootProject.ext.pack.umeng_appkey,
        ]
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.umeng.analytics:analytics:latest.integration'
    implementation files('libs/umeng-common-1.5.1.jar')
    implementation files('libs/umeng-debug-1.0.0.jar')
}
